generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?   @default("https://tse4.mm.bing.net/th?id=OIP.ybB2a0HimX1I-ybBY4pOPwHaHa&pid=Api&P=0&h=180")
  saldo         String?   @default("0")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user_type UserType? @default(CUSTOMER)

  history_ngojek   HistoryNgojek[]
  history_topup    HistoryTopUp[]
  history_transfer HistoryTransfer[]

  favorit Favorit[]

  accounts Account[]
  sessions Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model HistoryNgojek {
  id String @id @unique @default(uuid())

  history_type HistoryType?
  title        String?
  driver       String?
  payment      String?
  price        String?
  order_time   String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model HistoryTopUp {
  id String @id @unique @default(uuid())

  history_type HistoryType?
  price        String?
  person       String?
  payment      String?
  order_time   String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model HistoryTransfer {
  id String @id @unique @default(uuid())

  history_type HistoryType?
  price        String?
  person       String?
  order_time   String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Favorit {
  id String @id @unique @default(uuid())

  title   String?
  address String?
  image   String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

enum UserType {
  CUSTOMER
  DRIVER
}

enum HistoryType {
  MOTOR
  MOBIL
  TOPUP
  TRANSFER
}
